name: Deploy Solana Program to Devnet

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # ==============================
    # Install dependencies for Rust & Node
    # ==============================
    - name: Setup Rust, Node.js, and dependencies
      uses: actions/setup-node@v4
      with:
        node-version: 20
      continue-on-error: false
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
    - name: Verify base tools
      run: |
        rustc --version
        cargo --version
        node --version
        npm --version

    # ==============================
    # Install Solana CLI (GitHub mirror to avoid SSL issues)
    # ==============================
    - name: Install Solana CLI
      run: |
        echo "=== Installing Solana CLI via GitHub mirror ==="
        SOLANA_VERSION="v1.18.20"
        mkdir -p ~/.local/bin
        curl -L "https://github.com/solana-labs/solana/releases/download/${SOLANA_VERSION}/solana-release-x86_64-unknown-linux-gnu.tar.bz2" -o solana.tar.bz2
        tar -xjf solana.tar.bz2
        mv solana-release/bin/* ~/.local/bin/
        echo "$HOME/.local/bin" >> $GITHUB_PATH
        export PATH="$HOME/.local/bin:$PATH"
        solana --version

    # ==============================
    # Install Anchor CLI
    # ==============================
    - name: Install Anchor CLI
      run: |
        echo "=== Installing Anchor CLI ==="
        ANCHOR_VERSION="0.31.1"
        rustup default stable
        cargo install --git https://github.com/coral-xyz/anchor --tag v${ANCHOR_VERSION} anchor-cli --force
        anchor --version

    # ==============================
    # Configure Solana for Devnet
    # ==============================
    - name: Configure Solana CLI
      run: |
        solana config set --url https://api.devnet.solana.com
        solana config set --commitment confirmed

    # ==============================
    # Setup wallet from secret
    # ==============================
    - name: Create wallet from GitHub secret
      run: |
        mkdir -p ~/.config/solana
        echo "${{ secrets.SOLANA_WALLET_KEY }}" | base64 -d > ~/.config/solana/id.json
        chmod 600 ~/.config/solana/id.json
        solana address

    - name: Check wallet balance and airdrop if needed
      run: |
        BALANCE=$(solana balance | awk '{print $1}')
        echo "Current balance: $BALANCE"
        if (( $(echo "$BALANCE < 1.0" | bc -l) )); then
          echo "Requesting airdrop..."
          for i in {1..3}; do
            solana airdrop 2 && break
            echo "Retrying airdrop..."
            sleep 5
          done
          solana balance
        fi

    # ==============================
    # Build and Deploy Program
    # ==============================
    - name: Build program
      run: |
        cd Backend
        anchor build --verbose

    - name: Deploy program
      run: |
        cd Backend
        for i in {1..3}; do
          anchor deploy --verbose && break
          echo "Retrying deploy..."
          sleep 5
        done

    # ==============================
    # Extract and Update Program ID
    # ==============================
    - name: Extract Program ID
      run: |
        cd Backend
        PROGRAM_ID=$(solana address -k target/deploy/counter.json)
        echo "Program ID: $PROGRAM_ID"
        echo "PROGRAM_ID=$PROGRAM_ID" >> $GITHUB_ENV
        echo "$PROGRAM_ID" > program_id.txt

    - name: Update Anchor.toml with Program ID
      run: |
        cd Backend
        cp Anchor.toml Anchor.toml.backup
        sed -i "/\[programs.devnet\]/,/^\[/ s/counter = \".*\"/counter = \"${{ env.PROGRAM_ID }}\"/" Anchor.toml
        echo "âœ… Updated Anchor.toml with new Program ID"
        cat Anchor.toml

    # ==============================
    # Upload Artifacts & Commit
    # ==============================
    - name: Upload Program ID
      uses: actions/upload-artifact@v4
      with:
        name: program-id
        path: Backend/program_id.txt

    - name: Upload updated Anchor.toml
      uses: actions/upload-artifact@v4
      with:
        name: anchor-config
        path: Backend/Anchor.toml

    - name: Commit updated Anchor.toml
      run: |
        cd Backend
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add Anchor.toml
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Update Program ID to ${{ env.PROGRAM_ID }} [skip ci]"
          git push
        fi

    # ==============================
    # Deployment Summary
    # ==============================
    - name: Display Summary
      run: |
        echo "=========================================="
        echo "ðŸŽ‰ DEPLOYMENT SUCCESSFUL ðŸŽ‰"
        echo "=========================================="
        echo "Program ID: ${{ env.PROGRAM_ID }}"
        echo "Wallet Address: $(solana address)"
        echo "Network: Devnet"
        solana --version
        anchor --version
        echo "=========================================="
