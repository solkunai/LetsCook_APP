name: Deploy Solana Program to Devnet

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Extract versions from Cargo.lock
      uses: solana-developers/github-actions/extract-versions@v0.2.7
      id: versions

    # ==============================
    # Install Solana CLI (via GitHub mirror)
    # ==============================
    - name: Install Solana CLI (from GitHub mirror)
      run: |
        echo "=== Installing Solana CLI via GitHub mirror ==="
        SOLANA_VERSION="v1.18.20"
        mkdir -p ~/.local/bin
        curl -L "https://github.com/solana-labs/solana/releases/download/${SOLANA_VERSION}/solana-release-x86_64-unknown-linux-gnu.tar.bz2" -o solana.tar.bz2
        tar -xjf solana.tar.bz2
        mv solana-release/bin/* ~/.local/bin/
        echo "$HOME/.local/bin" >> $GITHUB_PATH
        solana --version

    # ==============================
    # Install Anchor and Node.js
    # ==============================
    - name: Setup Anchor and Node.js
      uses: solana-developers/github-actions/setup-all@v0.2.7
      with:
        anchor_version: ${{ steps.versions.outputs.anchor_version }}
        node_version: 20

    # ==============================
    # Verify installations
    # ==============================
    - name: Verify Solana and Anchor
      run: |
        echo "=== Verifying Solana & Anchor ==="
        solana --version
        anchor --version
        node --version
        npm --version

    # ==============================
    # Configure Solana CLI
    # ==============================
    - name: Configure Solana CLI for Devnet
      run: |
        solana config set --url https://api.devnet.solana.com
        solana config set --commitment confirmed

    # ==============================
    # Setup wallet from GitHub Secret
    # ==============================
    - name: Create wallet from secret
      run: |
        mkdir -p ~/.config/solana
        echo "${{ secrets.SOLANA_WALLET_KEY }}" | base64 -d > ~/.config/solana/id.json
        chmod 600 ~/.config/solana/id.json

    - name: Show wallet address
      run: |
        WALLET=$(solana address)
        echo "Wallet: $WALLET"
        echo "WALLET_ADDRESS=$WALLET" >> $GITHUB_ENV

    # ==============================
    # Airdrop if low balance
    # ==============================
    - name: Request airdrop (if balance < 1 SOL)
      run: |
        BALANCE=$(solana balance | awk '{print $1}')
        echo "Current balance: $BALANCE"
        if (( $(echo "$BALANCE < 1.0" | bc -l) )); then
          echo "Requesting airdrop..."
          for i in {1..3}; do
            solana airdrop 2 && break
            echo "Airdrop attempt $i failed, retrying..."
            sleep 5
          done
          solana balance
        fi

    # ==============================
    # Build and Deploy Program
    # ==============================
    - name: Install dependencies
      run: |
        cd Backend
        cargo build --release

    - name: Build Solana program
      run: |
        cd Backend
        anchor build --verbose

    - name: Deploy Solana program
      run: |
        cd Backend
        for i in {1..3}; do
          anchor deploy --verbose && break
          echo "Deploy attempt $i failed, retrying..."
          sleep 5
        done

    # ==============================
    # Update Anchor.toml with Program ID
    # ==============================
    - name: Extract and Update Program ID
      run: |
        cd Backend
        PROGRAM_ID=$(solana address -k target/deploy/counter.json)
        echo "Program ID: $PROGRAM_ID"
        echo "PROGRAM_ID=$PROGRAM_ID" >> $GITHUB_ENV
        echo "$PROGRAM_ID" > program_id.txt
        cp Anchor.toml Anchor.toml.backup
        sed -i "/\[programs.devnet\]/,/^\[/ s/counter = \".*\"/counter = \"${{ env.PROGRAM_ID }}\"/" Anchor.toml
        echo "Updated Anchor.toml with new Program ID:"
        cat Anchor.toml

    # ==============================
    # Upload Artifacts
    # ==============================
    - name: Upload Program ID
      uses: actions/upload-artifact@v4
      with:
        name: program-id
        path: Backend/program_id.txt

    - name: Upload updated Anchor.toml
      uses: actions/upload-artifact@v4
      with:
        name: anchor-config
        path: Backend/Anchor.toml

    # ==============================
    # Commit Updated Config
    # ==============================
    - name: Commit updated Anchor.toml
      run: |
        cd Backend
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add Anchor.toml
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Update Program ID to ${{ env.PROGRAM_ID }} [skip ci]"
          git push
        fi

    # ==============================
    # Final Summary
    # ==============================
    - name: Display Summary
      run: |
        echo "=========================================="
        echo "ðŸŽ‰ DEPLOYMENT SUCCESSFUL ðŸŽ‰"
        echo "=========================================="
        echo "Program ID: ${{ env.PROGRAM_ID }}"
        echo "Wallet Address: ${{ env.WALLET_ADDRESS }}"
        echo "Network: Devnet"
        solana --version
        anchor --version
        echo "=========================================="
