// Script to extract instruction discriminators from the backend program
// This should be run after building the program to get the actual discriminators

const fs = require('fs');
const path = require('path');

// These are the instruction discriminators that would be generated by Shank
// You'll need to update these with the actual discriminators from your built program
const INSTRUCTION_DISCRIMINATORS = {
  // Main Program Instructions
  INIT: Buffer.from([0x8f, 0x4c, 0x2d, 0x1a, 0x3b, 0x5c, 0x7e, 0x9f]), // Init
  CREATE_LAUNCH: Buffer.from([0x1a, 0x2b, 0x3c, 0x4d, 0x5e, 0x6f, 0x7a, 0x8b]), // CreateLaunch
  BUY_TICKETS: Buffer.from([0x2b, 0x3c, 0x4d, 0x5e, 0x6f, 0x7a, 0x8b, 0x9c]), // BuyTickets
  CHECK_TICKETS: Buffer.from([0x3c, 0x4d, 0x5e, 0x6f, 0x7a, 0x8b, 0x9c, 0xad]), // CheckTickets
  INIT_COOK_AMM: Buffer.from([0x4d, 0x5e, 0x6f, 0x7a, 0x8b, 0x9c, 0xad, 0xbe]), // InitCookAMM
  HYPE_VOTE: Buffer.from([0x5e, 0x6f, 0x7a, 0x8b, 0x9c, 0xad, 0xbe, 0xcf]), // HypeVote
  CLAIM_REFUND: Buffer.from([0x6f, 0x7a, 0x8b, 0x9c, 0xad, 0xbe, 0xcf, 0xda]), // ClaimRefund
  EDIT_LAUNCH: Buffer.from([0x7a, 0x8b, 0x9c, 0xad, 0xbe, 0xcf, 0xda, 0xeb]), // EditLaunch
  CLAIM_TOKENS: Buffer.from([0x8b, 0x9c, 0xad, 0xbe, 0xcf, 0xda, 0xeb, 0xfc]), // ClaimTokens
  SET_NAME: Buffer.from([0x9c, 0xad, 0xbe, 0xcf, 0xda, 0xeb, 0xfc, 0x0d]), // SetName
  
  // Citizens Program Instructions
  START_MISSION: Buffer.from([0xad, 0xbe, 0xcf, 0xda, 0xeb, 0xfc, 0x0d, 0x1e]), // StartMission
  RESOLVE_MISSION: Buffer.from([0xbe, 0xcf, 0xda, 0xeb, 0xfc, 0x0d, 0x1e, 0x2f]), // ResolveMission
  BETRAY_MISSION: Buffer.from([0xcf, 0xda, 0xeb, 0xfc, 0x0d, 0x1e, 0x2f, 0x3a]), // BetrayMission
  
  // Listings Program Instructions
  CREATE_LISTING: Buffer.from([0xda, 0xeb, 0xfc, 0x0d, 0x1e, 0x2f, 0x3a, 0x4b]), // CreateListing
  REMOVE_LISTING: Buffer.from([0xeb, 0xfc, 0x0d, 0x1e, 0x2f, 0x3a, 0x4b, 0x5c]), // RemoveListing
  BUY_NFT: Buffer.from([0xfc, 0x0d, 0x1e, 0x2f, 0x3a, 0x4b, 0x5c, 0x6d]), // BuyNFT
};

// Generate the TypeScript file
const tsContent = `// Auto-generated instruction discriminators
// Update these with actual discriminators from your deployed programs

export const INSTRUCTION_DISCRIMINATORS = {
  // Main Program Instructions
  INIT: Buffer.from([0x8f, 0x4c, 0x2d, 0x1a, 0x3b, 0x5c, 0x7e, 0x9f]), // Init
  CREATE_LAUNCH: Buffer.from([0x1a, 0x2b, 0x3c, 0x4d, 0x5e, 0x6f, 0x7a, 0x8b]), // CreateLaunch
  BUY_TICKETS: Buffer.from([0x2b, 0x3c, 0x4d, 0x5e, 0x6f, 0x7a, 0x8b, 0x9c]), // BuyTickets
  CHECK_TICKETS: Buffer.from([0x3c, 0x4d, 0x5e, 0x6f, 0x7a, 0x8b, 0x9c, 0xad]), // CheckTickets
  INIT_COOK_AMM: Buffer.from([0x4d, 0x5e, 0x6f, 0x7a, 0x8b, 0x9c, 0xad, 0xbe]), // InitCookAMM
  HYPE_VOTE: Buffer.from([0x5e, 0x6f, 0x7a, 0x8b, 0x9c, 0xad, 0xbe, 0xcf]), // HypeVote
  CLAIM_REFUND: Buffer.from([0x6f, 0x7a, 0x8b, 0x9c, 0xad, 0xbe, 0xcf, 0xda]), // ClaimRefund
  EDIT_LAUNCH: Buffer.from([0x7a, 0x8b, 0x9c, 0xad, 0xbe, 0xcf, 0xda, 0xeb]), // EditLaunch
  CLAIM_TOKENS: Buffer.from([0x8b, 0x9c, 0xad, 0xbe, 0xcf, 0xda, 0xeb, 0xfc]), // ClaimTokens
  SET_NAME: Buffer.from([0x9c, 0xad, 0xbe, 0xcf, 0xda, 0xeb, 0xfc, 0x0d]), // SetName
  
  // Citizens Program Instructions
  START_MISSION: Buffer.from([0xad, 0xbe, 0xcf, 0xda, 0xeb, 0xfc, 0x0d, 0x1e]), // StartMission
  RESOLVE_MISSION: Buffer.from([0xbe, 0xcf, 0xda, 0xeb, 0xfc, 0x0d, 0x1e, 0x2f]), // ResolveMission
  BETRAY_MISSION: Buffer.from([0xcf, 0xda, 0xeb, 0xfc, 0x0d, 0x1e, 0x2f, 0x3a]), // BetrayMission
  
  // Listings Program Instructions
  CREATE_LISTING: Buffer.from([0xda, 0xeb, 0xfc, 0x0d, 0x1e, 0x2f, 0x3a, 0x4b]), // CreateListing
  REMOVE_LISTING: Buffer.from([0xeb, 0xfc, 0x0d, 0x1e, 0x2f, 0x3a, 0x4b, 0x5c]), // RemoveListing
  BUY_NFT: Buffer.from([0xfc, 0x0d, 0x1e, 0x2f, 0x3a, 0x4b, 0x5c, 0x6d]), // BuyNFT
};

export default INSTRUCTION_DISCRIMINATORS;
`;

// Write the file
fs.writeFileSync(path.join(__dirname, 'client/src/lib/discriminators.ts'), tsContent);

console.log('‚úÖ Instruction discriminators generated!');
console.log('üìù Update these with actual discriminators from your deployed programs');
console.log('üîß Run: cd Backend/program && anchor build && anchor idl parse --file target/idl/cook_program.json');